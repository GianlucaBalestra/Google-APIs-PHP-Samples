<?php
// Copyright 2017 DAIMTO ([Linda Lawton](https://twitter.com/LindaLawtonDK)) :  [www.daimto.com](http://www.daimto.com/)
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by DAIMTO-Google-apis-Sample-generator 1.0.0
//     Template File Name:  methodTemplate.tt
//     Build date: 2017-10-08
//     PHP generator version: 1.0.0
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------  
// About 
// 
// Unofficial sample for the Cloud Resource Manager v2beta1 API for PHP. 
// This sample is designed to be used with the Google PHP client library. (https://github.com/google/google-api-php-client)
// 
// API Description: The Google Cloud Resource Manager API provides methods for creating, reading, and updating project metadata.
// API Documentation Link https://cloud.google.com/resource-manager
//
// Discovery Doc  https://www.googleapis.com/discovery/v1/apis/cloudresourcemanager/v2beta1/rest
//
//------------------------------------------------------------------------------
// Installation
//
// The preferred method is via https://getcomposer.org. Follow the installation instructions https://getcomposer.org/doc/00-intro.md 
// if you do not already have composer installed.
//
// Once composer is installed, execute the following command in your project root to install this library:
//
// composer require google/apiclient:^2.0
//
//------------------------------------------------------------------------------  
// Load the Google API PHP Client Library.
require_once __DIR__ . '/vendor/autoload.php';
session_start();

/***************************************************
* Include this line for service account authencation.  Note: Not all APIs support service accounts.  
//require_once __DIR__ . '/ServiceAccount.php';     
* Include the following four lines Oauth2 authencation.
* require_once __DIR__ . '/Oauth2Authentication.php';
* $_SESSION['mainScript'] = basename($_SERVER['PHP_SELF']);   // Oauth2callback.php will return here.
* $client = getGoogleClient();
* $service = new Google_Service_Cloudresourcemanager($client); 
****************************************************/

// Option paramaters can be set as needed.
 $optParams = array(
            
  //'parent' => '[YourValue]',  // The resource name of the new Folder's parent.Must be of the form `folders/{folder_id}` or `organizations/{org_id}`.
  'fields' => '*'
);
// Single Request.
$results = foldersCreateExample($service, $optParams);


/**
* Creates a Folder in the resource hierarchy.Returns an Operation which can be used to track the progress of thefolder creation workflow.Upon success the Operation.response field will be populated with thecreated Folder.In order to succeed, the addition of this new Folder must not violatethe Folder naming, height or fanout constraints.+ The Folder's display_name must be distinct from all other Folder's thatshare its parent.+ The addition of the Folder must not cause the active Folder hierarchyto exceed a height of 4. Note, the full active + deleted Folder hierarchyis allowed to reach a height of 8; this provides additional headroom whenmoving folders that contain deleted folders.+ The addition of the Folder must not cause the total number of Foldersunder its parent to exceed 100.If the operation fails due to a folder constraint violation,a PreconditionFailure explaining the violation will be returned.If the failure occurs synchronously then the PreconditionFailurewill be returned via the Status.details field and if it occursasynchronously then the PreconditionFailure will be returnedvia the the Operation.error field.The caller must have `resourcemanager.folders.create` permission on theidentified parent.
* @service Authenticated Cloudresourcemanager service.
* @optParams Optional paramaters are not required by a request.
* @return Operation
*/
function foldersCreateExample($service, $optParams)
{
	try
	{
		// Parameter validation.
		if ($service == null)
			throw new Exception("service is required.");
		if ($optParams == null)
			throw new Exception("optParams is required.");
		// Make the request and return the results.
		return $service->folders->CreateFolders($optParams);
	}
	catch (Exception $e)
	{
		print "An error occurred: " . $e->getMessage();
	}
}
?>
