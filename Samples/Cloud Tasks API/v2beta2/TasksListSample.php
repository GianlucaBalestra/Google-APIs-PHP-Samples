<?php
// Copyright 2017 DAIMTO ([Linda Lawton](https://twitter.com/LindaLawtonDK)) :  [www.daimto.com](http://www.daimto.com/)
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by DAIMTO-Google-apis-Sample-generator 1.0.0
//     Template File Name:  methodTemplate.tt
//     Build date: 2017-09-26
//     PHP generator version: 1.0.0
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------  
// About 
// 
// Unofficial sample for the Cloud Tasks v2beta2 API for PHP. 
// This sample is designed to be used with the Google PHP client library. (https://github.com/google/google-api-php-client)
// 
// API Description: Manages the execution of large numbers of distributed requests. Cloud Tasks is in Alpha.
// API Documentation Link https://cloud.google.com/cloud-tasks/
//
// Discovery Doc  https://www.googleapis.com/discovery/v1/apis/cloudtasks/v2beta2/rest
//
//------------------------------------------------------------------------------
// Installation
//
// The preferred method is via https://getcomposer.org. Follow the installation instructions https://getcomposer.org/doc/00-intro.md 
// if you do not already have composer installed.
//
// Once composer is installed, execute the following command in your project root to install this library:
//
// composer require google/apiclient:^2.0
//
//------------------------------------------------------------------------------  
// Load the Google API PHP Client Library.
require_once __DIR__ . '/vendor/autoload.php';
session_start();

/***************************************************
* Include this line for service account authencation.  Note: Not all APIs support service accounts.  
//require_once __DIR__ . '/ServiceAccount.php';     
* Include the following four lines Oauth2 authencation.
* require_once __DIR__ . '/Oauth2Authentication.php';
* $_SESSION['mainScript'] = basename($_SERVER['PHP_SELF']);   // Oauth2callback.php will return here.
* $client = getGoogleClient();
* $service = new Google_Service_Cloudtasks($client); 
****************************************************/

// Option paramaters can be set as needed.
 $optParams = array(
            
  //'pageToken' => '[YourValue]',  //A token identifying the page of results to return.To request the first page results, page_token must be empty. Torequest the next page of results, page_token must be the value ofListTasksResponse.next_page_token returned from the previouscall to CloudTasks.ListTasks method.The page token is valid for only 2 hours.
            
  //'orderBy' => '[YourValue]',  //Sort order used for the query. The fields supported for sortingare Task.schedule_time and PullMessage.tag. All results will bereturned in ascending order. The default ordering is byTask.schedule_time.
            
  //'responseView' => '[YourValue]',  //The response_view specifies which subset of the Task will bereturned.By default response_view is Task.View.BASIC; not allinformation is retrieved by default because some data, such aspayloads, might be desirable to return only when needed becauseof its large size or because of the sensitivity of data that itcontains.Authorization for Task.View.FULL requires `cloudtasks.tasks.fullView`[Google IAM](/iam/) permission on theTask.name resource.
            
  //'pageSize' => '[YourValue]',  //Requested page size. Fewer tasks than requested might be returned.The maximum page size is 1000. If unspecified, the page size willbe the maximum. Fewer tasks than requested might be returned,even if more tasks exist; useListTasksResponse.next_page_token to determine if more tasksexist.
  'fields' => '*'
);
// Single Request.
$results = tasksListExample($service, $parent, $optParams);

// Paginiation Example
do {
    if (!$results->getNextPageToken()) 
		break;

	$optParams['pageToken'] = $results->getNextPageToken();
	$results = filesListExample($service, $parent, $optParams);	
} while($results->getNextPageToken());  

/**
* Lists the tasks in a queue.By default response_view is Task.View.BASIC; not allinformation is retrieved by default due to performanceconsiderations; ListTasksRequest.response_view controls thesubset of information which is returned.
* @service Authenticated Cloudtasks service.
* @optParams Optional paramaters are not required by a request.
* @parent Required.

The queue name. For example:
`projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
* @return ListTasksResponse
*/
function tasksListExample($service, $parent, $optParams)
{
	try
	{
		// Parameter validation.
		if ($service == null)
			throw new Exception("service is required.");
		if ($optParams == null)
			throw new Exception("optParams is required.");
		if (parent == null)
			throw new Exception("parent is required.");
		// Make the request and return the results.
		return $service->tasks->ListTasks($parent, $optParams);
	}
	catch (Exception $e)
	{
		print "An error occurred: " . $e->getMessage();
	}
}
?>
