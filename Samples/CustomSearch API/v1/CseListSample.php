<?php
// Copyright 2017 DAIMTO ([Linda Lawton](https://twitter.com/LindaLawtonDK)) :  [www.daimto.com](http://www.daimto.com/)
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by DAIMTO-Google-apis-Sample-generator 1.0.0
//     Template File Name:  methodTemplate.tt
//     Build date: 2017-10-08
//     PHP generator version: 1.0.0
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------  
// About 
// 
// Unofficial sample for the customsearch v1 API for PHP. 
// This sample is designed to be used with the Google PHP client library. (https://github.com/google/google-api-php-client)
// 
// API Description: Searches over a website or collection of websites
// API Documentation Link https://developers.google.com/custom-search/v1/using_rest
//
// Discovery Doc  https://www.googleapis.com/discovery/v1/apis/customsearch/v1/rest
//
//------------------------------------------------------------------------------
// Installation
//
// The preferred method is via https://getcomposer.org. Follow the installation instructions https://getcomposer.org/doc/00-intro.md 
// if you do not already have composer installed.
//
// Once composer is installed, execute the following command in your project root to install this library:
//
// composer require google/apiclient:^2.0
//
//------------------------------------------------------------------------------  
// Load the Google API PHP Client Library.
require_once __DIR__ . '/vendor/autoload.php';
session_start();

/***************************************************
* Include this line for service account authencation.  Note: Not all APIs support service accounts.  
//require_once __DIR__ . '/ServiceAccount.php';     
* Include the following four lines Oauth2 authencation.
* require_once __DIR__ . '/Oauth2Authentication.php';
* $_SESSION['mainScript'] = basename($_SERVER['PHP_SELF']);   // Oauth2callback.php will return here.
* $client = getGoogleClient();
* $service = new Google_Service_Customsearch($client); 
****************************************************/

// Option paramaters can be set as needed.
 $optParams = array(
            
  //'c2coff' => '[YourValue]',  // Turns off the translation between zh-CN and zh-TW.
            
  //'cr' => '[YourValue]',  // Country restrict(s).
            
  //'cx' => '[YourValue]',  // The custom search engine ID to scope this search query
            
  //'dateRestrict' => '[YourValue]',  // Specifies all search results are from a time period
            
  //'exactTerms' => '[YourValue]',  // Identifies a phrase that all documents in the search results must contain
            
  //'excludeTerms' => '[YourValue]',  // Identifies a word or phrase that should not appear in any documents in the search results
            
  //'fileType' => '[YourValue]',  // Returns images of a specified type. Some of the allowed values are: bmp, gif, png, jpg, svg, pdf, ...
            
  //'filter' => '[YourValue]',  // Controls turning on or off the duplicate content filter.
            
  //'gl' => '[YourValue]',  // Geolocation of end user.
            
  //'googlehost' => '[YourValue]',  // The local Google domain to use to perform the search.
            
  //'highRange' => '[YourValue]',  // Creates a range in form as_nlo value..as_nhi value and attempts to append it to query
            
  //'hl' => '[YourValue]',  // Sets the user interface language.
            
  //'hq' => '[YourValue]',  // Appends the extra query terms to the query.
            
  //'imgColorType' => '[YourValue]',  // Returns black and white, grayscale, or color images: mono, gray, and color.
            
  //'imgDominantColor' => '[YourValue]',  // Returns images of a specific dominant color: yellow, green, teal, blue, purple, pink, white, gray, black and brown.
            
  //'imgSize' => '[YourValue]',  // Returns images of a specified size, where size can be one of: icon, small, medium, large, xlarge, xxlarge, and huge.
            
  //'imgType' => '[YourValue]',  // Returns images of a type, which can be one of: clipart, face, lineart, news, and photo.
            
  //'linkSite' => '[YourValue]',  // Specifies that all search results should contain a link to a particular URL
            
  //'lowRange' => '[YourValue]',  // Creates a range in form as_nlo value..as_nhi value and attempts to append it to query
            
  //'lr' => '[YourValue]',  // The language restriction for the search results
            
  //'num' => '[YourValue]',  // Number of search results to return
            
  //'orTerms' => '[YourValue]',  // Provides additional search terms to check for in a document, where each document in the search results must contain at least one of the additional search terms
            
  //'relatedSite' => '[YourValue]',  // Specifies that all search results should be pages that are related to the specified URL
            
  //'rights' => '[YourValue]',  // Filters based on licensing. Supported values include: cc_publicdomain, cc_attribute, cc_sharealike, cc_noncommercial, cc_nonderived and combinations of these.
            
  //'safe' => '[YourValue]',  // Search safety level
            
  //'searchType' => '[YourValue]',  // Specifies the search type: image.
            
  //'siteSearch' => '[YourValue]',  // Specifies all search results should be pages from a given site
            
  //'siteSearchFilter' => '[YourValue]',  // Controls whether to include or exclude results from the site named in the as_sitesearch parameter
            
  //'sort' => '[YourValue]',  // The sort expression to apply to the results
            
  //'start' => '[YourValue]',  // The index of the first result to return
  'fields' => '*'
);
// Single Request.
$results = cseListExample($service, $q, $optParams);


/**
* Returns metadata about the search performed, metadata about the custom search engine used for the search, and the search results.
* @service Authenticated Customsearch service.
* @optParams Optional paramaters are not required by a request.
* @q Query
* @return Search
*/
function cseListExample($service, $q, $optParams)
{
	try
	{
		// Parameter validation.
		if ($service == null)
			throw new Exception("service is required.");
		if ($optParams == null)
			throw new Exception("optParams is required.");
		if (q == null)
			throw new Exception("q is required.");
		// Make the request and return the results.
		return $service->cse->ListCse($q, $optParams);
	}
	catch (Exception $e)
	{
		print "An error occurred: " . $e->getMessage();
	}
}
?>
