<#@ template language="C#" #>
<#@ output extension=".php" #>
<#@ assembly name="C:\Users\HP_User\Source\Repos\discoverysamplebuilder\Src\GoogleSampleBuilder\packages\Google.Apis.1.27.1\lib\net45\Google.Apis.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="GoogleSampleBuilder.Core.Util" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Google.Apis.Discovery.v1.Data" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter name="APIResponse" type="Google.Apis.Discovery.v1.Data.RestDescription" #>
<# string thisFile = "ServiceAccount.tt"; 
var CleanName = ((APIResponse.CanonicalName != null) ? APIResponse.CanonicalName : APIResponse.Name).Replace(" ",string.Empty); 
CleanName = System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(CleanName.ToLower()); #>
<#@include file="LicenceHeader.tt" #>  
<#@include file="InstallationHeader.tt" #> 
require_once __DIR__ . '/vendor/autoload.php';
require_once __DIR__ . '/Oauth2Authentication.php';

// Start a session to persist credentials.
session_start();

// Handle authorization flow from the server.
if (! isset($_GET['code'])) {
	$client = buildClient();
	$auth_url = $client->createAuthUrl();
	header('Location: ' . filter_var($auth_url, FILTER_SANITIZE_URL));
} else {
	$client = buildClient();
	$client->authenticate($_GET['code']); // Exchange the authencation code for a refresh token and access token.
	// Add access token and refresh token to seession.
	$_SESSION['access_token'] = $client->getAccessToken();
	$_SESSION['refresh_token'] = $client->getRefreshToken();	
	//Redirect back to main script
	$redirect_uri = str_replace("oauth2callback.php",$_SESSION['mainScript'],$client->getRedirectUri()); 	
	header('Location: ' . filter_var($redirect_uri, FILTER_SANITIZE_URL));
}

?>